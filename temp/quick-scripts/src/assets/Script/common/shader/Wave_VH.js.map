{"version":3,"sources":["assets/Script/common/shader/Wave_VH.js"],"names":["_default_vert","require","_default_vert_no_mvp","_wave_vh_frag","cc","Class","Component","properties","onLoad","_angle","_motion","_use","_program","GLProgram","sys","isNative","log","initWithString","link","updateUniforms","initWithVertexShaderByteArray","addAttribute","macro","ATTRIBUTE_NAME_POSITION","VERTEX_ATTRIB_POSITION","ATTRIBUTE_NAME_COLOR","VERTEX_ATTRIB_COLOR","ATTRIBUTE_NAME_TEX_COORD","VERTEX_ATTRIB_TEX_COORDS","_uniMotion","getUniformLocationForName","_uniAngle","_mouse","glProgram_state","GLProgramState","getOrCreateWithGLProgram","setUniformFloat","setUniformLocationWith1f","setProgram","node","_sgNode","program","setGLProgramState","setShaderProgram","children","i","length","update","dt","use"],"mappings":"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","sourceRoot":"/","sourcesContent":["var _default_vert = require(\"./ccShader_Default_Vert.js\");\nvar _default_vert_no_mvp = require(\"./ccShader_Default_Vert_noMVP.js\");\nvar _wave_vh_frag = require(\"./ccShader_Wave_VH_Frag.js\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n\n    onLoad: function () {\n        this._angle = 15;\n        this._motion = 0;\n        this._use();\n    },\n\n    _use: function () {\n        this._program = new cc.GLProgram();\n        if (cc.sys.isNative) {\n            cc.log(\"use native GLProgram\")\n            this._program.initWithString(_default_vert_no_mvp, _wave_vh_frag);\n            this._program.link();\n            this._program.updateUniforms();\n        } else {\n            this._program.initWithVertexShaderByteArray(_default_vert, _wave_vh_frag);\n\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_POSITION, cc.macro.VERTEX_ATTRIB_POSITION);\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_COLOR, cc.macro.VERTEX_ATTRIB_COLOR);\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_TEX_COORD, cc.macro.VERTEX_ATTRIB_TEX_COORDS);\n            this._program.link();\n            this._program.updateUniforms();\n        }\n\n        this._uniMotion = this._program.getUniformLocationForName(\"motion\");\n        this._uniAngle = this._program.getUniformLocationForName(\"angle\");\n        this._mouse = this._program.getUniformLocationForName(\"mouse\");\n\n\n        if (cc.sys.isNative) {\n            var glProgram_state = cc.GLProgramState.getOrCreateWithGLProgram(this._program);\n            glProgram_state.setUniformFloat(this._uniAngle, this._angle);\n        } else {\n            this._program.setUniformLocationWith1f(this._uniAngle, this._angle);\n            // this._program.setUniformLocationWith2f(this._mouse, this._mousepos.x, this._mousepos.y )\n        }\n\n\n        this.setProgram(this.node._sgNode, this._program);\n    },\n    setProgram: function (node, program) {\n        if (cc.sys.isNative) {\n            var glProgram_state = cc.GLProgramState.getOrCreateWithGLProgram(program);\n            node.setGLProgramState(glProgram_state);\n        } else {\n            node.setShaderProgram(program);\n        }\n\n\n        var children = node.children;\n        if (!children)\n            return;\n\n        for (var i = 0; i < children.length; i++)\n            this.setProgram(children[i], program);\n    },\n\n\n    update: function (dt) {\n        if (this._program) {\n\n            this._program.use();\n            if (cc.sys.isNative) {\n                var glProgram_state = cc.GLProgramState.getOrCreateWithGLProgram(this._program);\n                glProgram_state.setUniformFloat(this._uniMotion, (this._motion += 0.02));\n            } else {\n                this._program.setUniformLocationWith1f(this._uniMotion, (this._motion += 0.02));\n                this._program.updateUniforms();\n            }\n            if( 1.0e20 < this._motion ){ this._motion = 0; }\n        }\n    }\n});\n"]}